class Solution {
  public:
  bool cycle(int i,vector<int>&vis,vector<int>&prev,vector<int>adj[]){
      vis[i]=1;
      prev[i]=1;
      for(auto it:adj[i]){
          if(!vis[it]){
              if(cycle(it,vis,prev,adj))
                 return true;
          }
          else if(prev[it])
             return true;
      }
      prev[i]=0;
      return false;
  }
    // Function to detect cycle in a directed graph.
    bool isCyclic(int V, vector<int> adj[]) {
        vector<int>vis(V,0);
        vector<int>prev(V,0);
        for(int i=0;i<V;i++){
            if(!vis[i]){
                if(cycle(i,vis,prev,adj))
                return true;
            }
        }
        return false;
    }
};
